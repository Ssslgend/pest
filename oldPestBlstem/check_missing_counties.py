#!/usr/bin/env python3
"""
检查气候参数字典中缺失的县名
"""

import pandas as pd
import json

# 加载病虫害数据
df_pest = pd.read_csv("datas/shandong_pest_data/shandong_fall_webworm_occurrences_20250926_221822.csv")

# 获取所有县名
counties_in_data = df_pest['原始行政区名称'].unique()

# 从代码中复制气候参数字典的县名
counties_in_params = [
    '历城区', '槐荫区', '天桥区', '长清区', '章丘区', '平阴县', '商河县', '张店区', '淄川区', 
    '博山区', '临淄区', '周村区', '桓台县', '高青县', '沂源县', '寒亭区', '坊子区', '奎文区', 
    '临朐县', '昌乐县', '青州市', '诸城市', '寿光市', '安丘市', '高密市', '昌邑市', '市北区', 
    '崂山区', '李沧区', '城阳区', '即墨区', '胶州市', '平度市', '莱西市', '芝罘区', '福山区', 
    '牟平区', '莱山区', '长岛县', '龙口市', '莱阳市', '莱州市', '蓬莱市', '招远市', '栖霞市', 
    '海阳市', '环翠区', '文登区', '荣成市', '乳山市', '东港区', '岚山区', '五莲县', '莒县', 
    '东营区', '河口区', '垦利区', '利津县', '广饶县', '滨城区', '沾化区', '惠民县', '阳信县', 
    '无棣县', '博兴县', '德城区', '陵城区', '宁津县', '庆云县', '临邑县', '齐河县', '平原县', 
    '夏津县', '武城县', '乐陵市', '禹城市', '东昌府区', '阳谷县', '莘县', '茌平区', '东阿县', 
    '冠县', '高唐县', '临清市', '任城区', '兖州区', '微山县', '鱼台县', '金乡县', '嘉祥县', 
    '汶上县', '泗水县', '梁山县', '曲阜市', '邹城市', '泰山区', '岱岳区', '宁阳县', '东平县', 
    '新泰市', '肥城市', '兰山区', '罗庄区', '河东区', '沂南县', '郯城县', '兰陵县', '费县', 
    '平邑县', '莒南县', '蒙阴县', '临沭县', '市中区', '薛城区', '峄城区', '台儿庄区', '山亭区', 
    '滕州市', '牡丹区', '定陶区', '曹县', '单县', '成武县', '巨野县', '郓城县', '鄄城县', '东明县', 
    '莱城区', '钢城区', '邹平市'
]

# 找出缺失的县名
missing_counties = []
for county in counties_in_data:
    if county not in counties_in_params:
        missing_counties.append(county)

print(f"数据中的县名总数: {len(counties_in_data)}")
print(f"参数字典中的县名总数: {len(counties_in_params)}")
print(f"缺失的县名数量: {len(missing_counties)}")
print("\n缺失的县名:")
for county in missing_counties:
    print(f"  {county}")

# 获取这些县的实际坐标数据
print("\n缺失县的坐标信息:")
for county in missing_counties:
    county_data = df_pest[df_pest['原始行政区名称'] == county].iloc[0]
    print(f"  {county}: 经度={county_data['发生样点经度']}, 纬度={county_data['发生样点纬度']}")